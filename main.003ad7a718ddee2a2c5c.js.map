{"version":3,"sources":["webpack:///./js/inputHandle.js","webpack:///./js/fetchCountries.js"],"names":["defaults","styling","icons","defaultModules","set","PNotifyMobile","inputRef","document","querySelector","searchResultsRef","addEventListener","debounce","event","innerHTML","searchQuery","target","value","fetch","then","result","json","data","length","alert","text","type","delay","insertAdjacentHTML","reduce","acc","item","name","createListCountriesTemplate","templateLang","languages","capital","population","flag","createCountryPropertiesTemplate","catch","console","log"],"mappings":"sOAMAA,WAASC,QAAU,cACnBD,WAASE,MAAQ,cAEjBC,iBAAeC,IAAIC,EAAe,IAElC,IAAMC,EAAWC,SAASC,cAAc,WAClCC,EAAmBF,SAASC,cAAc,mBAChDF,EAASI,iBAAiB,QAASC,KAEnC,SAAqBC,GACnBH,EAAiBI,UAAY,IChBQC,EDiBXF,EAAMG,OAAOC,MChBhCC,MAAM,yCAC8BH,GACzCI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WDgBrBF,MAAK,SAAAG,GACAA,EAAKC,OAAS,IAChBC,gBAAM,CACJC,KAAM,8DACNC,KAAM,QACNC,MAAO,MAGPL,EAAKC,QAAU,GAAKD,EAAKC,QAAU,IACrCb,EAAiBkB,mBACf,YAcV,SAAqCN,GAQnC,MANE,4BACAA,EAAKO,QAAO,SAACC,EAAKC,GAEhB,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEF,IACH,QApBMC,CAA4BX,IAGZ,IAAhBA,EAAKC,QACPb,EAAiBkB,mBACf,YAmBV,SAAyCN,GACvC,IAAMY,EAAeZ,EAAK,GAAGa,UAAUN,QAAO,SAACC,EAAKC,GAElD,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEF,IAOH,MANwB,4BAA4BV,EAAK,GAAGU,KAAvC,iIAEmCV,EAAK,GAAGc,QAF3C,oEAGsCd,EAAK,GAAGe,WAH9C,+DAIiCH,EAJjC,gDAKUZ,EAAK,GAAGgB,KALlB,4BAvBbC,CAAgCjB,OAIrCkB,MAAMC,QAAQC,KCxCJ,IAAwB3B,IDakB,Q","file":"main.003ad7a718ddee2a2c5c.js","sourcesContent":["import debounce from 'lodash.debounce';\r\nimport { alert, defaultModules } from '@pnotify/core/dist/PNotify.js';\r\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\r\nimport fetchCountries from '/js/fetchCountries.js';\r\nimport { defaults } from '@pnotify/core';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\ndefaults.styling = 'brighttheme';\r\ndefaults.icons = 'brighttheme';\r\n\r\ndefaultModules.set(PNotifyMobile, {});\r\n\r\nconst inputRef = document.querySelector('.search');\r\nconst searchResultsRef = document.querySelector('.search-results');\r\ninputRef.addEventListener('input', debounce(handleInput, 500));\r\n\r\nfunction handleInput(event) {\r\n  searchResultsRef.innerHTML = '';\r\n  const countrySearchName = event.target.value;\r\n  fetchCountries(countrySearchName)\r\n    .then(data => {\r\n      if (data.length > 10) {\r\n        alert({\r\n          text: 'Too many matches found. Please enter a more specific query!',\r\n          type: 'error',\r\n          delay: 4000,\r\n        });\r\n      }\r\n      if (data.length >= 2 && data.length <= 10) {\r\n        searchResultsRef.insertAdjacentHTML(\r\n          'beforeend',\r\n          createListCountriesTemplate(data),\r\n        );\r\n      }\r\n      if (data.length === 1) {\r\n        searchResultsRef.insertAdjacentHTML(\r\n          'beforeend',\r\n          createCountryPropertiesTemplate(data),\r\n        );\r\n      }\r\n    })\r\n    .catch(console.log);\r\n}\r\n\r\nfunction createListCountriesTemplate(data) {\r\n  const template =\r\n    '<ul class=\"country-list\">' +\r\n    data.reduce((acc, item) => {\r\n      acc += `<li>${item.name}</li>`;\r\n      return acc;\r\n    }, '') +\r\n    '</ul>';\r\n  return template;\r\n}\r\n\r\nfunction createCountryPropertiesTemplate(data) {\r\n  const templateLang = data[0].languages.reduce((acc, item) => {\r\n    acc += `<li>${item.name}</li>`;\r\n    return acc;\r\n  }, '');\r\n  const templateCountry = `<h2 class='country-name'>${data[0].name}</h2>\r\n        <div class='wrapper'><div class='country-properties'>\r\n      <p><span class='country-property'>Capital: </span>${data[0].capital}</p>\r\n      <p><span class='country-property'>Population: </span>${data[0].population}</p>\r\n      <h3 class='country-property'>Languages:</h3><ul>${templateLang}</ul></div>\r\n      <img height='400px' src=\"${data[0].flag}\" alt=\"flag\"></img></div>`;\r\n  return templateCountry;\r\n}\r\n","export default function fetchCountries(searchQuery) {\r\n  return fetch(\r\n    `https://restcountries.eu/rest/v2/name/${searchQuery}`,\r\n  ).then(result => result.json());\r\n}\r\n"],"sourceRoot":""}